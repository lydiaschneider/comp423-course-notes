{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to Lydia's Course Notes","text":"<p>This is my home page. I will use it to organize and share my course notes.</p>"},{"location":"tutorials/rust-setup/","title":"Rust setup","text":""},{"location":"tutorials/rust-setup/#my-guide-to-rust","title":"My Guide to Rust","text":"<ul> <li>Primary author: Lydia Schneider</li> <li>Reviewer: Akshaya Sundar</li> </ul> <p>Some instructions from Parts 1 &amp; 2 use information from Comp 423 Mkdocs Tutorial</p>"},{"location":"tutorials/rust-setup/#here-are-some-prerequisites-before-we-get-started","title":"Here are some prerequisites before we get started:","text":"<ul> <li>A GitHub account: If you need to make one, you can sign up at GitHub</li> <li>Git installed: Install Git</li> <li>VS Code downloaded: Download and install it from here.</li> <li>Docker installed: Get Docker here.</li> <li>Knowledge of command-line basics</li> </ul> <p>Ok let's get started with Rust!</p>"},{"location":"tutorials/rust-setup/#part-1-project-setup-creating-a-repository","title":"Part 1: Project Setup: Creating a Repository","text":"<p>1.1) Open your terminal and create a new directory for you project with the following commands</p> <p><pre><code>mkdir rust-dev-container\ncd rust-dev-container\n</code></pre> 1.2) Initialize a Git repository with the following command <pre><code>git init\n</code></pre> 1.3) Create a README.md file: <pre><code>echo \"# Rust DevContainer Setup\" &gt; README.md\ngit add README.md\ngit commit -m \"Initial commit with README\"\n</code></pre> 1.4) Log into GitHub and navigate to the Create a New Repository page</p> <p>1.5) Fill out the following details * Repository name: rust-devcontainer * Description: \"Rust project setup using Dev Containers\" * Visibility: Public</p> <ul> <li>Do NOT initialize the repository with a README, .gitignore, or license.</li> </ul> <p>1.6) Click Create Repository</p> <p>1.7) Link your local repository to GitHub with the following commands: <pre><code>git remote add origin https://github.com/&lt;your-username&gt;/rust-devcontainer.git\ngit branch -M main\ngit push --set-upstream origin main\n!!! note \"This only needs to be done one when pushing the initial commit. After this, git push will work without the need for --set-upstream\"\n</code></pre></p>"},{"location":"tutorials/rust-setup/#part-2-setting-up-the-dev-container","title":"Part 2: Setting Up the Dev Container","text":"<p>Make sure docker is running</p> <p>2.1) Create a .devcontainer directory and configuration file with the following code: <pre><code>mkdir .devcontainer\ncd .devcontainer\necho '{\n \"name\": \"Rust DevContainer\",\n \"image\": \"mcr.microsoft.com/devcontainers/rust:latest\",\n \"extensions\": [\"rust-lang.rust-analyzer\"]\n}' &gt; devcontainer.json\n</code></pre></p> <p>2.2) Open the project in VS Code. You can do this via: File &gt; Open Folder.</p> <p>2.3) When prompted, Reopen in Container to start to Dev Container. Make sure you have the Remote-Container extension for VS Code installed to enable to Dev Container functionality.</p> <p>2.4) Once inside the container, verify Rust is installed: <pre><code>rustc --version\n</code></pre></p>"},{"location":"tutorials/rust-setup/#part-3-writing-and-running-your-first-rust-program","title":"Part 3: Writing and Running Your First Rust Program","text":"<p>3.1) Create a new Rust project with the following commands <pre><code>cargo new hello_comp423 --vcs none\ncd hello_comp423\n</code></pre> 3.2) To write the \"Hello COMP423\", edit src/main.rs and replace the contents with the following: <pre><code>fn main() {\n   println!(\"Hello COMP423\");\n}\n</code></pre> 3.3) Build the project: <pre><code>cargo build\n</code></pre> 3.4) Compile and run the project: <pre><code>cargo run\n</code></pre></p> <p>This command compiles and runs the project in a single step whereas cargo build only compiles the code without executing it. This is similar to how gcc compiles programs in C, except you must run the executable manually.</p> <p>3.5) Pushing final changes to GitHub <pre><code>git add .\ngit commit -m \"Your message here\"\ngit push\n</code></pre> 3.6) Ensure changes were made to you GitHub repository</p>"},{"location":"tutorials/rust-setup/#congratulations","title":"Congratulations!","text":"<p>You've successfully set up a Rust Dev Container, written a program &amp; pushed it to GitHub!</p>"}]}